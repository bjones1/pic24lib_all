// Provide GPIO for R${x}
// ====================
#ifdef _R${x}

  // Low-level config
  // ----------------
  // Analog:
# ifdef R${x}_AN
#   define ENABLE_R${x}_ANALOG()  (RXY_GPIO_PCFG(R${x}_AN) = 1)
#   define DISABLE_R${x}_ANALOG() (RXY_GPIO_PCFG(R${x}_AN) = 0)
# else
#   define DISABLE_R${x}_ANALOG() ((void) 0)
# endif

  // Input/output:
# define CONFIG_R${x}_AS_INPUT()  (_TRIS${x} = 1)
# define CONFIG_R${x}_AS_OUTPUT() (_TRIS${x} = 0)

  // Open-drain:
# if defined(_ODC${x})
#   define ENABLE_R${x}_OPENDRAIN()  (_ODC${x} = 1)
#   define DISABLE_R${x}_OPENDRAIN() (_ODC${x} = 0)
# elif defined(_OD${x})   // The PIF24F names this bit _OD instead of _ODC.
#   define ENABLE_R${x}_OPENDRAIN()  (_OD${x} = 1)
#   define DISABLE_R${x}_OPENDRAIN() (_OD${x} = 0)
# else
#   define DISABLE_R${x}_OPENDRAIN() ((void) 0)
# endif

  // Change notification, pullups and pulldowns:
# ifdef R${x}_CN
#   define ENABLE_R${x}_PULLUP()  (RXY_GPIO_CNPUE(R${x}_CN) = 1)
#   define DISABLE_R${x}_PULLUP() (RXY_GPIO_CNPUE(R${x}_CN) = 0)

#   if RXY_HAS_CNPDE(R${x}_CN)
#     define ENABLE_R${x}_PULLDOWN()  (RXY_GPIO_CNPDE(R${x}_CN) = 1)
#     define DISABLE_R${x}_PULLDOWN() (RXY_GPIO_CNPDE(R${x}_CN) = 0)
#   else
#     define DISABLE_R${x}_PULLDOWN() ((void) 0)
#   endif

#   define ENABLE_R${x}_CN_INTERRUPT()  (RXY_GPIO_CNIE(R${x}_CN) = 1)
#   define DISABLE_R${x}_CN_INTERRUPT() (RXY_GPIO_CNIE(R${x}_CN) = 0)

# else
#   define DISABLE_R${x}_PULLUP() ((void) 0)
#   define DISABLE_R${x}_PULLDOWN() ((void) 0)
#   define DISABLE_R${x}_CN_INTERRUPT() ((void) 0)
# endif

  // High-level config
  // -----------------
# ifdef R${x}_AN
#   define CONFIG_R${x}_AS_ANALOG()       \
      do {                              \
        ENABLE_R${x}_ANALOG();            \
        CONFIG_R${x}_AS_INPUT();          \
        DISABLE_R${x}_OPENDRAIN();        \
        DISABLE_R${x}_PULLUP();           \
        DISABLE_R${x}_PULLDOWN();         \
      } while (0)
# endif

# define CONFIG_R${x}_AS_DIG_INPUT()    \
    do {                              \
      DISABLE_R${x}_ANALOG();           \
      CONFIG_R${x}_AS_INPUT();          \
      DISABLE_R${x}_OPENDRAIN();        \
      DISABLE_R${x}_PULLUP();           \
      DISABLE_R${x}_PULLDOWN();         \
    } while (0)

# define CONFIG_R${x}_AS_DIG_OUTPUT()   \
    do {                              \
      DISABLE_R${x}_ANALOG();           \
      CONFIG_R${x}_AS_OUTPUT();         \
      DISABLE_R${x}_OPENDRAIN();        \
      DISABLE_R${x}_PULLUP();           \
      DISABLE_R${x}_PULLDOWN();         \
    } while (0)

#endif // #ifdef _R${x}: Provide GPIO for R${x}





